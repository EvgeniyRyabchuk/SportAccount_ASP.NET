// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportAccountApi.Models;

namespace SportAccountApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.Property<int>("GroupsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("GroupsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("GroupUser");
                });

            modelBuilder.Entity("SportAccountApi.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "GR-1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "GR-2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "GR-3"
                        });
                });

            modelBuilder.Entity("SportAccountApi.Models.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Phones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = 982885884,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Number = 982881234,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Number = 982348884,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SportAccountApi.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Client"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Coach"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("SportAccountApi.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("AreaSize")
                        .HasColumnType("smallint");

                    b.Property<short>("Floor")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaSize = (short)20,
                            Floor = (short)2,
                            Name = "Large Dance Room",
                            Number = 201
                        });
                });

            modelBuilder.Entity("SportAccountApi.Models.ScheduleWorkday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.ToTable("ScheduleWorkdays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoachId = 1,
                            Date = new DateTime(2022, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new DateTime(2022, 6, 18, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 6, 18, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SportAccountApi.Models.ScheduleWorkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<int>("SheduleWorkdayId")
                        .HasColumnType("int");

                    b.Property<int>("WorkoutTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("end")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("GroupId");

                    b.HasIndex("RoomId");

                    b.HasIndex("SheduleWorkdayId");

                    b.HasIndex("WorkoutTypeId");

                    b.ToTable("ScheduleWorkouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GroupId = 1,
                            RoomId = 1,
                            SheduleWorkdayId = 1,
                            WorkoutTypeId = 1,
                            end = new DateTime(2022, 6, 18, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            start = new DateTime(2022, 6, 18, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SportAccountApi.Models.Sex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sexs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Female"
                        });
                });

            modelBuilder.Entity("SportAccountApi.Models.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specializations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Individual training"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dance"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Yoga"
                        });
                });

            modelBuilder.Entity("SportAccountApi.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Main coach",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 2,
                            Name = "Coach",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Senior gym coach",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Manager",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Head manager of the hall",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("SportAccountApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("SexId")
                        .HasColumnType("int");

                    b.Property<int?>("SpecializationId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("SexId");

                    b.HasIndex("SpecializationId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2001, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jeka",
                            LastName = "LN",
                            Login = "12345",
                            MiddleName = "MN",
                            PasswordHash = new byte[] { 49, 165, 64, 78, 80, 118, 163, 50, 159, 27, 189, 142, 232, 202, 149, 9, 102, 157, 167, 27, 146, 145, 64, 127, 17, 157, 167, 49, 37, 245, 177, 29, 190, 59, 238, 149, 190, 210, 52, 10, 59, 170, 103, 252, 61, 137, 29, 110, 134, 3, 178, 22, 117, 63, 197, 167, 84, 62, 123, 73, 96, 85, 102, 156 },
                            PasswordSalt = new byte[] { 255, 101, 133, 120, 105, 239, 206, 45, 166, 245, 119, 45, 158, 19, 140, 22, 242, 228, 207, 93, 24, 62, 49, 97, 223, 64, 9, 87, 121, 81, 251, 18, 26, 228, 70, 95, 83, 100, 12, 154, 183, 186, 169, 128, 158, 94, 68, 43, 132, 224, 126, 156, 5, 175, 20, 164, 174, 207, 25, 19, 221, 59, 94, 134, 187, 226, 46, 96, 41, 254, 87, 136, 8, 183, 87, 176, 87, 165, 95, 114, 158, 68, 38, 218, 191, 174, 133, 182, 241, 93, 195, 5, 40, 127, 174, 189, 184, 39, 193, 60, 239, 34, 101, 240, 209, 66, 150, 161, 182, 152, 154, 212, 64, 251, 154, 7, 204, 182, 188, 68, 209, 68, 72, 213, 233, 37, 68, 139 },
                            RoleId = 2,
                            SexId = 1,
                            SpecializationId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2001, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Rose",
                            LastName = "RN",
                            Login = "12345",
                            MiddleName = "RM",
                            PasswordHash = new byte[] { 49, 165, 64, 78, 80, 118, 163, 50, 159, 27, 189, 142, 232, 202, 149, 9, 102, 157, 167, 27, 146, 145, 64, 127, 17, 157, 167, 49, 37, 245, 177, 29, 190, 59, 238, 149, 190, 210, 52, 10, 59, 170, 103, 252, 61, 137, 29, 110, 134, 3, 178, 22, 117, 63, 197, 167, 84, 62, 123, 73, 96, 85, 102, 156 },
                            PasswordSalt = new byte[] { 255, 101, 133, 120, 105, 239, 206, 45, 166, 245, 119, 45, 158, 19, 140, 22, 242, 228, 207, 93, 24, 62, 49, 97, 223, 64, 9, 87, 121, 81, 251, 18, 26, 228, 70, 95, 83, 100, 12, 154, 183, 186, 169, 128, 158, 94, 68, 43, 132, 224, 126, 156, 5, 175, 20, 164, 174, 207, 25, 19, 221, 59, 94, 134, 187, 226, 46, 96, 41, 254, 87, 136, 8, 183, 87, 176, 87, 165, 95, 114, 158, 68, 38, 218, 191, 174, 133, 182, 241, 93, 195, 5, 40, 127, 174, 189, 184, 39, 193, 60, 239, 34, 101, 240, 209, 66, 150, 161, 182, 152, 154, 212, 64, 251, 154, 7, 204, 182, 188, 68, 209, 68, 72, 213, 233, 37, 68, 139 },
                            RoleId = 1,
                            SexId = 2
                        });
                });

            modelBuilder.Entity("SportAccountApi.Models.WorkoutType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkoutTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Group Type"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Personal Type"
                        });
                });

            modelBuilder.Entity("SportAccountApi.Models._RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expired_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.HasOne("SportAccountApi.Models.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAccountApi.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SportAccountApi.Models.Phone", b =>
                {
                    b.HasOne("SportAccountApi.Models.User", "User")
                        .WithMany("Phones")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SportAccountApi.Models.ScheduleWorkday", b =>
                {
                    b.HasOne("SportAccountApi.Models.User", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("SportAccountApi.Models.ScheduleWorkout", b =>
                {
                    b.HasOne("SportAccountApi.Models.User", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("SportAccountApi.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("SportAccountApi.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAccountApi.Models.ScheduleWorkday", "SheduleWorkday")
                        .WithMany()
                        .HasForeignKey("SheduleWorkdayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAccountApi.Models.WorkoutType", "WorkoutType")
                        .WithMany()
                        .HasForeignKey("WorkoutTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Group");

                    b.Navigation("Room");

                    b.Navigation("SheduleWorkday");

                    b.Navigation("WorkoutType");
                });

            modelBuilder.Entity("SportAccountApi.Models.Status", b =>
                {
                    b.HasOne("SportAccountApi.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SportAccountApi.Models.User", b =>
                {
                    b.HasOne("SportAccountApi.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAccountApi.Models.Sex", "Sex")
                        .WithMany()
                        .HasForeignKey("SexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportAccountApi.Models.Specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("SpecializationId");

                    b.Navigation("Role");

                    b.Navigation("Sex");

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("SportAccountApi.Models._RefreshToken", b =>
                {
                    b.HasOne("SportAccountApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SportAccountApi.Models.User", b =>
                {
                    b.Navigation("Phones");
                });
#pragma warning restore 612, 618
        }
    }
}
